paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(fig.width=4.5)
knitr::opts_chunk$set(fig.height=3.5)
knitr::opts_chunk$set(fig.align='center')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(fig.width=4.5)
knitr::opts_chunk$set(fig.height=3.5)
knitr::opts_chunk$set(fig.align='center')
set.seed(123)
N<-1e6
Population<-rnorm(N, mean=50,sd=5)
hist(Population,
main="Raw Score Histogram",
xlab="Hyperactivity Score", ylab="Frequency")
plot(density(scale(Population)),
main="Probability Density Function",
xlab="Hyperactivity Score [z-score]", ylab="Probability",
xlim=c(-3.25, 3.25))
alpha=.05
z.cut.off=qnorm(alpha)*-1
plot(density(scale(Population)),
main="Probability Density Function: a = .05",
xlab="Hyperactivity Score [z-score]", ylab="Probability",
xlim=c(-3.25, 3.25))
abline(v=z.cut.off, col="blue")
alpha=.05/2
z.cut.lower=qnorm(alpha)
z.cut.upper=qnorm(alpha)*-1
plot(density(scale(Population)),
main="Probability Density Function: a = .05",
xlab="Hyperactivity Score [z-score]", ylab="Probability",
xlim=c(-3.25, 3.25))
abline(v=z.cut.lower, col="blue")
abline(v=z.cut.upper, col="blue")
alphas=c(.05/2,.01/2,.005/2,.001/2,.0001/2)
z.cut.lower=qnorm(alphas)
z.cut.upper=qnorm(alphas)*-1
plot(density(scale(Population)),
main="Probability Density Function",
xlab="Hyperactivity Score [z-score]", ylab="Probability",
xlim=c(-5.25, 5.25))
abline(v=z.cut.lower, col=c("blue", "red","purple","orange","black"),lty=c(1,2,3,4,5))
abline(v=z.cut.upper, col=c("blue", "red","purple","orange","black"),lty=c(1,2,3,4,5))
n=36
set.seed(666)
sample<-sample(Population, n, replace = TRUE)
# we use TRUE in the replace to mean that the probability of each kid being sampled remains constant even though in reality that isn't possible
sample.1<-sample+rnorm(n,mean=2,sd=0)
hist(sample.1,
main="Histogram",
xlab="Hyperactivity Score", ylab="Frequency")
M = mean(sample.1)
Mu = 50 # given to you from the population
sigma = 5 # given to you, don't use sample SD for z-test # if you don't have sigma, use the SD of the sample
Ztest <- (M - Mu) / (sigma/sqrt(n))
alpha=c(.005/2)
z.cut.lower=qnorm(alpha)
z.cut.upper=qnorm(alpha)*-1
plot(density(scale(Population)),
main="Probability Density Function: a = .005",
xlab="Hyperactivity Score [z-score]", ylab="Probability",
xlim=c(-3.25, 3.25))
abline(v=z.cut.lower, col=c("purple"),lty=c(1))
abline(v=z.cut.upper, col=c("purple"),lty=c(1))
abline(v=Ztest, col=c("red"),lty=c(2))
P.two.tailed=2*pnorm(-abs(Ztest))
P.one.tailed=pnorm(-abs(Ztest))
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 5, 30)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df=1", "df=5", "df=30", "normal")
plot(x, hx, type="l", lty=1, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lty=i+1, lwd=1, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=1, lty=c(2, 3, 4, 1), col=colors)
# adapted from http://www.statmethods.net/advgraphs/probability.html
alpha = .05/2
zcrit <- -qnorm(alpha)
#create degrees of freedom
dfs <- seq(1, 30, by=1)
tcrit <- -qt(alpha,dfs)
plot(dfs, tcrit, type="l", lty=1, xlab="Degrees of Freedom",
ylab="t-crit", main="Alpha = .05")
abline(h=zcrit, col="red")
set.seed(42)
# extact a sample of 30 people, that has +9 effect on IQ
n = 30
MeanIQ.effect = 109
SDIQ = 15
Mozart.Sample <- rnorm(n,MeanIQ.effect,SDIQ)
hist(Mozart.Sample, xlab="IQ scores",main="Mozart Effect")
# t-test
?t.test
Mozart.t.test<-t.test(Mozart.Sample,
alternative = c("two.sided"),
mu = 100, paired = FALSE, var.equal = TRUE,
conf.level = 0.95)
Mozart.t.test #call the results
View(Mozart.t.test)
Test.welch<-t.test(NEOTC_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
setwd('/Users/rachel/Box\ Sync/WHMRP/NEO\ Manuscript/NEO_Manuscript2018/manuscript_data')
NEO_Data_Change<-read.csv("AllSubjs_NEO_Cog_Change.csv")
Men<-subset(NEO_Data, Sex=="1")
nrow(Men) #n=28
Women<-subset(NEO_Data, Sex=="2")
nrow(Women) #n=22
str(NEO_Data)
NEO_Data$Sex<-factor(NEO_Data$Sex,
levels=c(1,2),
labels=c("Male", "Female"))
NEO_Data_Change$Sex <-
as.numeric(NEO_Data_Change$Sex) #numeric treatment group variable
Test.welch<-t.test(NEOTC_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch
#N
Test.welch.N<-t.test(NEOTN_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N
#E
Test.welch.E<-t.test(NEOTC_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E
#O
Test.welch.O<-t.test(NEOTC_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.O
#C
Test.welch.C<-t.test(NEOTC_Change ~ Sex, data = NEO_Data_Change, ##p-value = 0.8374
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.C
#A
Test.welch.A<-t.test(NEOTC_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.A
View(Test.welch.A)
Test.welch.N
Test.welch.E
#O
Test.welch.O<-t.test(NEOTO_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.O
#O
Test.welch.O<-t.test(NEOTO_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.O
#A
Test.welch.A<-t.test(NEOTA_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.A
## N Subscores
Test.welch.N1<-t.test(NEOTN1_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N1
Test.welch.N2<-t.test(NEOTN2_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N2
Test.welch.N3<-t.test(NEOTN3_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N3
Test.welch.N4<-t.test(NEOTN4_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N4
Test.welch.N5<-t.test(NEOTN5_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N5
Test.welch.N6<-t.test(NEOTN6_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N6
## E Subscores
Test.welch.E1<-t.test(NEOTE1_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E1 ##p-value = 0.2057
Test.welch.E2<-t.test(NEOTE2_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E2 ##p-value = 0.7043
Test.welch.E3<-t.test(NEOTE3_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E3 ##p-value = 0.06105
Test.welch.E4<-t.test(NEOTE4_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E4 ##p-value = 0.4417
Test.welch.E5<-t.test(NEOTE5_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E5 ##p-value = 0.5891
Test.welch.E6<-t.test(NEOTE6_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E6 ##p-value = 0.4611
NEO_Data_Change<-read.csv("AllSubjs_NEO_Cog_Change.csv")
NEO_Data_Change<-read.csv("AllSubjs_NEO_Cog_Change.csv")
NEO_Data_Change<-read.csv("AllSubjs_NEO_Cog_Change.csv")
View(NEO_Data_Change)
NEO_Data_Change<-read.csv("AllSubjs_NEO_Cog_Change.csv")
View(NEO_Data_Change)
## Cognition Scores
Test.welch.1<-t.test(hvl123_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.1
Test.welch.2<-t.test(letflu_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.2 ##p-value = 0.3813
Test.welch.3<-t.test(logimm_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.3 ##p-value = 0.5524
Test.welch.4<-t.test(bvm123_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.4 ##p-value = 0.07412
Test.welch.5<-t.test(bvmdel_Change ~ Sex, data = NEO_Data_Change,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.5 ##p-value = 0.3296
setwd('/Users/rachel/Box\ Sync/WHMRP/NEO\ Manuscript/NEO_Manuscript2018/manuscript_data')
NEO_Data_Change<-read.csv("AllSubjs_NEO_Cog_V2.csv")
View(NEO_Data_Change)
NEO_Data<-read.csv("AllSubjs_NEO_Cog_V2.csv")
View(NEO_Data)
## Sex Differences in NEO change scores
#E p-value = 0.4039
Test.welch.E<-t.test(NEOTE ~ Treatment_Group, data = NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E
#N p-value = 0.5481
Test.welch.N<-t.test(NEOTN ~ Sex, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N
#E p-value = 0.7366
Test.welch.E<-t.test(NEOTE ~ Treatment_Group, data = NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.E
#O p-value = 0.4039
Test.welch.O<-t.test(NEOTO ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.O
#C p-value = 0.8374
Test.welch.C<-t.test(NEOTC ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.C
#A p-value = 0.4033
Test.welch.A<-t.test(NEOTA ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.A
## N Subscores
Test.welch.N1<-t.test(NEOTN1 ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.N1 ##p-value = 0.2057
## Cognition Scores
Test.welch.1<-t.test(hvl123 ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.1 ##p-value = 0.3813
Test.welch.2<-t.test(letflu ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.2 ##p-value = 0.5524
Test.welch.3<-t.test(logimm ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.3 ##p-value = 0.07412
Test.welch.4<-t.test(bvm123 ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.4 ##p-value = 0.3296
Test.welch.5<-t.test(bvmdel ~ Treatment_Group, data =  NEO_Data,
alternative = c("two.sided"),
paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
Test.welch.5 ##p-value = 0.8133
#Set working directory (you need to change this)
setwd('/Users/rachel/Box\ Sync/R\ Coursework/Stats_II/Class2')
# Import this data file
#### Note: Dataset take from https://onlinecourses.science.psu.edu/stat501/datasets
iqsize <- read.table("iqsize.txt", header=T)
names(iqsize)
library(ggpubr) #graph data
ggscatter(CorrData, x = PIQ, y = Brain,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
library(ggpubr) #graph data
ggscatter(iqsize, x = PIQ, y = Brain,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
View(iqsize)
ggscatter(iqsize, x = "PIQ", y = "Brain",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
ggscatter(iqsize, x = "Brain, y = ""PIQ",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
ggscatter(iqsize, x = "Brain", y = PIQ",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
ggscatter(iqsize, x = "Brain", y = "PIQ",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
M.Model.5<-lm(PIQ~ Brain.C+Weight.C, data = iqsize)
###############################################
######## Class 1 - Homework ###################
###############################################
#Load Libraries you will need
library(car) #graph data
library(ppcor) #Advanced Correlations
#Set working directory (you need to change this)
setwd('/Users/rachel/Box\ Sync/R\ Coursework/Stats_II/Class2')
# Import this data file
#### Note: Dataset take from https://onlinecourses.science.psu.edu/stat501/datasets
iqsize <- read.table("iqsize.txt", header=T)
names(iqsize)
################
### Overview ###
################
# How does your IQ relate to your physical measurment (brain size, Height, Weight)?
# Your job it figure out what predicts IQ. Also make sure to know how the IVs are all related to one another.
######## Variables
#DV = PIQ
#IV = Brain,Height,Weight
################################
########### Task 1:  ###########
################################
# Calculate the zero-order & semipartial correlation.
# Label what you are doing
# zero-order Correlations (everything to everything)
# Between DV and IVs
Corr.1<-cor.test(iqsize$PIQ,iqsize$Brain,
method = c("pearson"))
Corr.2<-cor.test(iqsize$PIQ,iqsize$Height,
method = c("pearson"))
Corr.3<-cor.test(iqsize$PIQ,iqsize$Weight,
method = c("pearson"))
Corr.1 ## t = 2.4484, df = 36, p-value = 0.01935
Corr.2 ## t = -0.56137, df = 36, p-value = 0.578
Corr.3 ## t = 0.015073, df = 36, p-value = 0.9881
# Between IVs
Corr.IVs.1<-cor.test(iqsize$Height,iqsize$Weight,
method = c("pearson"))
Corr.IVs.1 ## t = 5.8748, df = 36, p-value = 1.021e-06
Corr.IVs.2<-cor.test(iqsize$Height,iqsize$Brain,
method = c("pearson"))
Corr.IVs.2 ## t = 4.3659, df = 36, p-value = 0.0001023
Corr.IVs.3<-cor.test(iqsize$Brain,iqsize$Weight,
method = c("pearson"))
Corr.IVs.3 ## t = 3.5904, df = 36, p-value = 0.000977
################################
### Theory question  1 #########
################################
# Do you see any problems with the correlations between the IVs in terms of
# using them in the same model at predictors?
# There is a significant relationship between Height, Weight, and Brain so they all account
# for a lot of overlapping variance in the model. If they were venn diagram circles,
# the Height and Weight variables would be on top of each other.
############
# semipartial correlations (DV is always PIQ, one control at time)
CorrSP.1<-spcor.test(iqsize$PIQ, iqsize$Brain, iqsize$Weight)
CorrSP.1 ## p = 0.007
CorrSP.2<-spcor.test(iqsize$PIQ, iqsize$Brain, iqsize$Height)
CorrSP.2 ## p = 0.006
CorrSP.3<-spcor.test(iqsize$PIQ, iqsize$Weight, iqsize$Height)
CorrSP.3 ## p = 0.577
CorrSP.4<-spcor.test(iqsize$PIQ, iqsize$Height, iqsize$Weight)
CorrSP.4 ## p = 0.433
CorrSP.5<-spcor.test(iqsize$PIQ, iqsize$Weight, iqsize$Brain)
CorrSP.5 ## p = 0.184
CorrSP.6<-spcor.test(iqsize$PIQ, iqsize$Height, iqsize$Brain)
CorrSP.6 ## p = 0.017
################################
### Theory question  2 #########
################################
# The relationship between PIQ~Brain got stronger when controling for WT or HT,
# relative the zero-order correlation what does that mean and why might this happen?
# Height and Weight predict head size so they absorb a lot of the variance in the relationship
################################
########### Task 2:  ###########
################################
# Center your predictors!
iqsize$Brain.C<-scale(iqsize$Brain, center=TRUE)[,]
iqsize$Weight.C<-scale(iqsize$Weight, center=TRUE)[,]
iqsize$Height.C<-scale(iqsize$Height, center=TRUE)[,]
# Run the regressions (one IV at time)
M.Model.1<-lm(PIQ~ Brain.C, data = iqsize)
M.Model.2<-lm(PIQ~ Weight.C, data = iqsize)
M.Model.3<-lm(PIQ~ Height.C, data = iqsize)
summary(M.Model.1) # 0.0194 *
summary(M.Model.2) # 0.988
summary(M.Model.3) # 0.578
# Based on the pattern of correlations you found add 2 IVs at a time
# Hint: Think about those theory questions.
M.Model.4<-lm(PIQ~ Brain.C+Height.C, data = iqsize)
summary(M.Model.4) # p-value: 0.002
M.Model.5<-lm(PIQ~ Brain.C+Weight.C, data = iqsize)
summary(M.Model.5) # p-value: 0.023
################################
### Theory question 3 ##########
################################
# Compare the estimates (R2 & slopes for brain model only with brain + WT and brain + HT)
# Explain how the R2 & slopes changes from the brain only model and why that might have happened
# brain only: Multiple R-squared:  0.1427; slope = 8.538
# brain + WT: Multiple R-squared:  0.1925; slope = 11.555
# brain + HT: Multiple R-squared:  0.2949; slope = 14.953
# Brain + Height had the strongest relationship with IQ
# As you account for more and more of the variance, your R2 will increase. We know from running correlations
# that weight and height correlate with eachother and with brain size. This is because having a larger
# body means your brain will be larger. Height is more closely related to brain size and therefor
# produces the best R2 when added to the model. The relationship between IQ and brain size has largely
# been debunked and at this point in time is only amplified by MRA's and white supremacists so
# not sure what this data is all about.
library(ggpubr) #graph data
ggscatter(iqsize, x = "Brain", y = "PIQ",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
summary(M.Model.5) # p-value: 0.023
