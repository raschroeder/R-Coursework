install.packages(effects)
install.packages("effects")
install.packages("stargazer")
install.packages("tidyverse")
install.packages("ggpubr")
install.packages("afex")
install.packages("apa")
install.packages("texreg")
install.packages(c("polycor", "VennDiagram"))
#Load Libraries you will need
library(MASS)
library(ggpubr)
library(car)
library(polycor)
library(ggplot2)
library(pwr)
#Set working directory (you need to change this)
setwd('/Users/rachel/Box\ Sync/R\ Coursework/Stats_II/Class1/')
# Import this data file
#### Note: Dataset give to me by Amanda Roy
Class1.Data<-read.csv('Class1InClassData.csv')
head(Class1.Data)
library(ggpubr) #graph data
ggscatter(CorrData, x = "Health", y = "Yrsmar",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
ggscatter(Class1.Data, x = "Health", y = "Yrsmar",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
ggscatter(Class1.Data, x = "Yrsmar", y = "Health",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
# Run a regression (predict health from marriage)
Yrsmar.1<-lm(Health~Yrsmar,data = Class1.Data)
summary(Yrsmar.1)
#If you feel up to it, try the fancy plot with red and blue dots
Class1.Data$predicted <- predict(Yrsmar.1)   # Save the predicted values with our real data
Class1.Data$residuals <- residuals(Yrsmar.1) # Save the residual values
library(ggplot2)
ggplot(data = CorrData, aes(x = Yrsmar, y = Health)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +  # Plot regression slope
geom_point(aes(color = residuals)) +  # Color mapped here
scale_color_gradient2(low = "blue", mid = "white", high = "red") +  # Colors to use here
guides(color = FALSE) +
geom_segment(aes(xend = Yrsmar, yend = predicted), alpha = .2) +  # alpha to fade lines
geom_point(aes(y = predicted), shape = 1) +
theme_bw()  # Add theme for cleaner look
ggplot(data = Class1.Data, aes(x = Yrsmar, y = Health)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +  # Plot regression slope
geom_point(aes(color = residuals)) +  # Color mapped here
scale_color_gradient2(low = "blue", mid = "white", high = "red") +  # Colors to use here
guides(color = FALSE) +
geom_segment(aes(xend = Yrsmar, yend = predicted), alpha = .2) +  # alpha to fade lines
geom_point(aes(y = predicted), shape = 1) +
theme_bw()  # Add theme for cleaner look
View(Class1.Data)
# Explain how much variance is explained
summary(Yrsmar.1)
############ Task 2: is age related to health?
# plot the scatter plot
ggscatter(Class1.Data, x = "age", y = "Health",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
# Run pearson correlation between age and health.
Corr.Result.1<-cor.test(Class1.Data$Health, Class1.Data$age,
method = c("pearson"))
library(apa)
cor_apa(Corr.Result.1,format ="text")
Corr.Result.1
########### Task 3: is gender related to health?
# plot the scatter plot
ggscatter(Class1.Data, x = "gender", y = "Health",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
#run the point-by-serial
library(polycor) #Advanced Correlations
with(Class1.Data,
polyserial(gender,Health, ML=TRUE))
# plot the scatter plot
ggscatter(Class1.Data, x = "age", y = "Yrsmar",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
# Run pearson correlation between age and years married.
Corr.Result.2<-cor.test(Class1.Data$age, Class1.Data$Yrsmar,
method = c("pearson"))
Corr.Result.2
# Explain how much variance is explained
summary(Yrsmar.1)
library(dplyr)
library(ggpubr) #graph data
library(car)
library(boot)
library(pwr)
#Set working directory (you need to change this)
setwd("/Users/rachel/Box\ Sync/R\ Coursework/Stats_II/Class1/")
NAF<-read.csv("NakedandAfraidData.csv") #https://gist.github.com/anonymous/11ffb3405f951e3fae700d79eb9748d7#file-survivalist_recap-csv
View(NAF)
NAF.NotFinished<-NAF %>% filter(Leave=="TRUE")
View(NAF.NotFinished)
#########################################################
# Plot the relationship between PSRStart and LeaveDay.  #
# Note you will want to "predict" LeaveDay              #
#########################################################
ggscatter(NAF.NotFinished, x = "PSRStart", y = "LeaveDay",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
#######################################################
# Create a regresison model and summerize the results #
#######################################################
StartScore.Leave<-lm(LeaveDay~PSRStart,data = NAF.NotFinished)
summary(StartScore.Leave)
##################################
# Boot the model fit, 2K times
###################################
set.seed(666)
Boot.StartScore.Leave <-Boot(StartScore.Leave, R = 2000)
# View results
hist(Boot.StartScore.Leave, legend="separate")
# get 95% confidence interval and report BCA CI around prediction
confint(BootParms, level=.95)
# get 95% confidence interval and report BCA CI around prediction
confint(Boot.StartScore.Leave, level=.95)
NAF.Finished<-NAF %>% filter(Leave=="FALSE")
#########################################################
# Plot the relationship between PSRStart and WeightLoss #
# Note you will want to "predict" WeightLoss            #
#########################################################
ggscatter(NAF.Finished, x = "PSRStart", y = "WeightLoss",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
#######################################################
# Create a regresison model and summerize the results #
#######################################################
StartScore.WeightLoss<-lm(WeightLoss~PSRStart,data = NAF.Finished)
summary(StartScore.WeightLoss)
# u	 = degrees of freedom for numerator
# v	= degrees of freedom for denominator
# f2 = effect size
# sig.level= (Type I error probability)
# power = (1 minus Type II error probability)
f2.icecream <- r^2 / (1-r^2)
pwr.f2.test(u = 1, v = NULL, f2 = f2.icecream, sig.level = 0.05, power = .95)
pwr.f2.test(u = 1, v = NULL, f2 = 0.1432, sig.level = 0.05, power = .95)
# u	 = degrees of freedom for numerator
# v	= degrees of freedom for denominator
# f2 = effect size (taken from Multiple R-squared)
# sig.level= (Type I error probability)
# power = (1 minus Type II error probability)
f2.icecream <- 0.1432 / (1-0.1432)
pwr.f2.test(u = 1, v = NULL, f2 = f2.icecream, sig.level = 0.05, power = .95)
cor_apa(StartScore.WeightLoss,format ="text")
summary(StartScore.WeightLoss)
summary(StartScore.Leave)
#########################################################
# Plot the relationship between PSRStart and LeaveDay.  #
# Note you will want to "predict" LeaveDay              #
#########################################################
ggscatter(NAF.NotFinished, x = "PSRStart", y = "LeaveDay",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = FALSE, # Add correlation coefficient. see ?stat_cor
)
#######################################################
# Create a regresison model and summerize the results #
#######################################################
StartScore.Leave<-lm(LeaveDay~PSRStart,data = NAF.NotFinished)
summary(StartScore.Leave)
# get 95% confidence interval and report BCA CI around prediction
confint(Boot.StartScore.Leave, level=.95)
f2.weightloss <- 0.1432 / (1-0.1432) #(taken from Multiple R-squared)
pwr.test(u = 1, v = NULL, f2 = f2.weightloss, sig.level = 0.05, power = .95)
pwr.f2.test(u = 1, v = NULL, f2 = f2.weightloss, sig.level = 0.05, power = .95)
